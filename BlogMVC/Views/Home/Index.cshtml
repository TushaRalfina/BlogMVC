
@using PagedList.Mvc;
@using PagedList;
@model IPagedList<BlogMVC.Models.post>

@{
    ViewBag.Title = "Home";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<!-- # site-content
================================================== -->
<section id="content" class="s-content">


    <!-- hero -->
    <div class="hero">

        <div class="hero__slider swiper-container">

            <div class="swiper-wrapper">
                <article class="hero__slide swiper-slide">
                    <div class="hero__entry-image" style="background-image: url('/Content/images/thumbs/featured/featured-01_2000.jpg');"></div>
                    <div class="hero__entry-text">
                        <div class="hero__entry-text-inner">
                            <div class="hero__entry-meta">
                                <span class="cat-links">
                                    <a href="category.html">Inspiration</a>
                                </span>
                            </div>
                            <h2 class="hero__entry-title">
                                <a href="@Url.Action("Post", "Home")">
                                    Understanding and Using Negative Space.
                                </a>
                            </h2>
                            <p class="hero__entry-desc">
                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor
                                incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis
                                nostrud corporis est laudantium voluptatum consectetur adipiscing.
                            </p>
                         </div>
                    </div>
                </article>

            </div> <!-- swiper-wrapper -->

            <div class="swiper-pagination"></div>

        </div> <!-- end hero slider -->

        <a href="#bricks" class="hero__scroll-down smoothscroll">
            <svg width="24" height="24" fill="none" viewBox="0 0 24 24">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M10.25 6.75L4.75 12L10.25 17.25"></path>
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19.25 12H5"></path>
            </svg>
            <span>Scroll</span>
        </a>

    </div> <!-- end hero -->
   
    


    <!--  masonry -->
    <div id="bricks" class="bricks">

        <div class="masonry">

            <div class="bricks-wrapper" data-animate-block>

                <div class="grid-sizer"></div>
                @foreach (var post in Model)
                {
                    <article class="brick entry" data-animate-el>
                        <div class="entry__thumb">
                            <a href="@Url.Action("Post", "BlogPost", new { id = post.id })" class="thumb-link">
                                <img src="@post.main_image" alt="">
                            </a>
                        </div>

                        <div class="entry__text">
                            <div class="entry__header">
                                <div class="entry__meta">
                                    @foreach (var postCategory in post.PostCategories)
                                    {
                                        <span class="cat-links">
                                            <a href="#">@postCategory.category.name</a>
                                        </span>
                                    }

                                    <span class="byline">
                                        By:
                                        <a href="#0">@post.user.username</a>
                                    </span>
                                </div>
                                <h1 class="entry__title"><a href="@Url.Action("Post", "BlogPost", new { id = post.id })">@post.title</a></h1>
                            </div>





                            <a class="entry__more-link" href="@Url.Action("Post", "BlogPost", new { id = post.id })">Read More</a>
                        </div>
                    </article>
                }
            </div> <!-- end bricks-wrapper -->

        </div> <!-- end masonry-->
  
    <style>
         .pagination-container {
            margin-top: 20px;
            text-align: center;
        }

            .pagination-container .pagination {
                display: inline-block;
                padding-left: 0;
                margin: 0;
                border-radius: 0.25rem;
            }

                .pagination-container .pagination li {
                    display: inline;
                    margin-right: 5px;
                }

                    .pagination-container .pagination li a,
                    .pagination-container .pagination li span {
                        position: relative;
                        float: left;
                        padding: 6px 12px;
                        line-height: 1.42857143;
                        text-decoration: none;
                        color: #000000;
                        background-color: #fff;
                        border: 1px solid #ddd;
                        margin-left: -1px;
                        font-weight: 400;
                    }

                    .pagination-container .pagination li.active a {
                        z-index: 2;
                        color: #fff;
                        background-color: #000000;
                        border-color: #000000;
                    }

                    .pagination-container .pagination li.disabled a,
                    .pagination-container .pagination li.disabled span {
                        color: #777;
                        background-color: #fff;
                        border-color: #ddd;
                        cursor: not-allowed;
                    }

    </style>

        <div class="pagination-container">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), PagedListRenderOptions.ClassicPlusFirstAndLast)
        </div>

    </div> <!-- end bricks -->

</section> <!-- end s-content -->



